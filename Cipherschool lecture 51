    
    void insert(int key) {
        if (root == null) {
            root = new Node(key);
            return;
        }

        Node newNode = new Node(key);
        Node current = root;
        Node parent;

        while (true) {
            parent = current;
            if (key < current.key) {
                current = current.left;
                if (current == null) {
                    parent.left = newNode;
                    return;
                }
            } else {
                current = current.right;
                if (current == null) {
                    parent.right = newNode;
                    return;
                }
            }
        }
    }

    public static void main(String[] args) {
        BinarySearchTree tree = new BinarySearchTree();

        
        tree.root = new Node(50);               
        tree.root.left = new Node(30);           
        tree.root.right = new Node(70);         
        tree.root.left.left = new Node(20);       
        tree.root.left.right = new Node(40);     
        tree.root.right.left = new Node(60);     
        tree.root.right.right = new Node(80);    
                                
                                                

        
        System.out.println("Root key: " + tree.root.key);
        System.out.println("Left child of root: " + tree.root.left.key);
        System.out.println("Right child of root: " + tree.root.right.key);
    }
}
